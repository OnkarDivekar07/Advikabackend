// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  address   String?
  role      String   // 'admin' or 'customer'
  createdAt DateTime @default(now())

  // Relations
  orders         Order[]
  carts          Cart[]
  reviews        Review[]
  contactQueries ContactQuery[]
}


model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  category    String
  brand       String
  price       Float
  stock       Int
  images      String[]   // Array of image URLs
  description String
  createdAt   DateTime   @default(now())
  isNewArrival Boolean @default(false)
  // Relations
  carts       Cart[]     // One product can be in many cart items
  reviews     Review[]   // One product can have many reviews
  orderItems  OrderItem[]
}

model Order {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  total      Float
  status     String    // e.g. 'pending', 'shipped', 'delivered', 'cancelled'
  payment    Json      // store payment details like method, transaction ID etc.
  orderItems  OrderItem[]
  createdAt  DateTime  @default(now())
}

model Cart {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int
}

model Review {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  rating     Int      // e.g. 1 to 5
  comment    String
  createdAt  DateTime @default(now())
}

model ContactQuery {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String
  message String

  userId  String?     // Optional, since not all queries may be by registered users
  user    User?       @relation(fields: [userId], references: [id])
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String
  productId String
  quantity  Int
  price     Float

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}


model Banner {
  id        String   @id @map("_id") @default(auto()) @db.ObjectId
  imageUrl  String
  linkUrl   String?
  createdAt DateTime @default(now())
}


